name: Build ISO and Deploy VM on ESXi

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  ISO_FILENAME: my_dashboard_v1.iso
  ISO_DIRNAME : esxi_dir
  VM_NAME: git-vm-test
  VM_CPU: 2
  VM_MEM: 4
  VM_DISK: 30
  VM_NETWORK: "VM Network"

jobs:
  build-and-push:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: 컨테이너 이미지 빌드
        run: podman build --network=host -t localhost/my_dashboard:latest .

      - name: ISO 파일 빌드 및 output 디렉토리 생성
        run: |
          mkdir -p output
          sudo podman run --rm --privileged \
            --network=host \
            -v ./output:/output \
            -v /var/lib/containers/storage:/var/lib/containers/storage \
            quay.io/centos-bootc/bootc-image-builder:latest \
            --type iso \
            --output /output/${ISO_DIRNAME} \
            localhost/my_dashboard:latest

      - name: ISO 파일 HTTP 서버로 제공
        run: |
          cd output
          mv ${ISO_DIRNAME}/bootiso/install.iso ./${ISO_FILENAME}
          python3 -m http.server 8080 --bind 0.0.0.0 &
          echo $! > ../http_server.pid

      - name: sshpass 설치
        run: sudo yum install -y sshpass

      - name: Python 종속성 설정
        run: pip install paramiko

      - name: ESXi에서 wget으로 ISO 다운로드
        run: |
          RUNNER_IP=$(hostname -I | awk '{print $1}')
          sshpass -p "${{ secrets.ESXI_PASS }}" ssh -o StrictHostKeyChecking=no \
            ${{ secrets.ESXI_USER }}@${{ secrets.ESXI_HOST }} \
            "wget http://${RUNNER_IP}:8080/${ISO_FILENAME} -O /vmfs/volumes/${{ secrets.ESXI_DATASTORE }}/${ISO_FILENAME}"

      - name: ESXi VM 자동 생성 (python)
        run: |
          chmod +x esxi-vm-create.py
          python3 esxi-vm-create.py \
            -H ${{ secrets.ESXI_HOST }} \
            -U ${{ secrets.ESXI_USER }} \
            -P ${{ secrets.ESXI_PASS }} \
            -n ${VM_NAME} \
            -c ${VM_CPU} \
            -m ${VM_MEM} \
            -v ${VM_DISK} \
            -S ${{ secrets.ESXI_DATASTORE }} \
            -N "${VM_NETWORK}" \
            -i /vmfs/volumes/${{ secrets.ESXI_DATASTORE }}/${ISO_FILENAME} \
            -o "svga.autodetect=TRUE" "monitor_phys.host_triggers=TRUE" \
            --summary
