name: Build, Push bootc ISO, and Deploy VM on ESXi

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  ISO_FILENAME: my_dashboard_v1.iso  # 디렉토리명(변경 시 여기에만 입력)

jobs:
  build-and-push:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: 컨테이너 이미지 빌드
        run: podman build --network=host -t localhost/my_dashboard:latest .

      - name: ISO 파일 빌드 및 output 디렉토리 생성
        run: |
          mkdir -p output
          sudo podman run --rm --privileged \
            --network=host \
            -v ./output:/output \
            -v /var/lib/containers/storage:/var/lib/containers/storage \
            quay.io/centos-bootc/bootc-image-builder:latest \
            --type iso \
            --output /output/${ISO_FILENAME} \
            localhost/my_dashboard:latest

      - name: Harbor 레지스트리 로그인
        run: podman login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASS }} harbor.bootc.com:80

      - name: ISO 파일 push (skopeo 사용)
        run: |
          sudo dnf install -y skopeo
          skopeo copy --dest-creds=${{ secrets.REGISTRY_USER }}:${{ secrets.REGISTRY_PASS }} \
            oci-archive:./output/${ISO_FILENAME}/bootiso/install.iso \
            docker://harbor.bootc.com:80/bootc/my_dashboard:${ISO_FILENAME}

      - name: ESXi 데이터스토어로 ISO 업로드 (SCP)
        run: |
          scp -o StrictHostKeyChecking=no \
            ./output/${ISO_FILENAME}/bootiso/install.iso \
            ${ESXI_USER}@${ESXI_HOST}:/vmfs/volumes/${ESXI_DATASTORE}/${ISO_FILENAME}.iso

      - name: ESXi VM 자동 생성 (python)
        run: |
          python3 esxi-vm-create.py \
            -H ${ESXI_HOST} \
            -U ${ESXI_USER} \
            -P ${ESXI_PASS} \
            -n my_dashboard-vm \
            -c 4 \
            -m 8 \
            -v 40 \
            -S ${ESXI_DATASTORE} \
            --iso /vmfs/volumes/${ESXI_DATASTORE}/${ISO_FILENAME}.iso \
            -N "VM Network" \
            -g centos7-64 \
            --summary
